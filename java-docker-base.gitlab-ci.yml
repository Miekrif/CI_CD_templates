image: safe-registry.alfastrah.ru/docker:25.0.5

include:
  - local: "templates/gitlab_release.yml"
  - local: "templates/maven/preparing.yml"
  - local: "templates/maven/maven_release.yml"
  - local: "templates/docker/docker_maven_build.yml"
  - local: "templates/docker/docker_deploy.yml"

services:
  - name: safe-registry.alfastrah.ru/docker:25.0.5-dind
    alias: docker

variables:
  DOCKER_IMAGE: "$NEXUS_REGISTRY_URL/$NEXUS_PATH/$ARTIFACT_NAME"
  DOCKER_IMAGE_VERSION: "$CI_COMMIT_TAG"
  SCANNED_IMAGE: "$DOCKER_IMAGE:latest"
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode -Denvironment.config=$ENV_CONFIG -Dmaven.repo.local=.m2/repository"
  SONAR_OPTS: "-Dsonar.host.url=$SONAR_SERVER_URL -Dsonar.login=$SONAR_LOGIN_TOKEN -Dsonar.qualitygate.wait=true -Dsonar.qualitygate.timeout=600 -Dsonar.coverage.jacoco.xmlReportPath=target/site/jacoco/jacoco.xml"
  OPENJDK_MAVEN_IMAGE_SLIM: ""
  ARTIFACT_NAME: ""
  JAR_NAME: ""
  NEXUS_PATH: ""
  SKIP_SONAR: "false"
  DOCKER_HOST: "tcp://docker:2375"
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2

stages:
  - build
  - release
  - deploy
  - security
  - rollback

cache:
  paths:
    - .m2/

maven_build:
  stage: build
  image: $OPENJDK_MAVEN_IMAGE_SLIM
  script:
    - mvn $MAVEN_CLI_OPTS clean package
  needs: ["maven_prepare"]
  artifacts:
    expire_in: 1 hour
    paths:
      - target/
  timeout: 30 min

sonar:
  stage: build
  image: $OPENJDK_MAVEN_IMAGE_SLIM
  except:
    refs:
      # Не запускаем для сборок тегов
      - tags
    variables:
      # Если коммит был автоматический (с помощью maven-release-plugin) - пропускаем фазу проверки Sonar
      - $CI_COMMIT_MESSAGE =~ /maven-release-plugin/
      # Если явно указан флаг пропуска Sonar-фазы - пропускаем это задание
      - $SKIP_SONAR == "true"
  needs: ["maven_prepare", "maven_build"]
  script:
    - mvn $MAVEN_CLI_OPTS $SONAR_OPTS sonar:sonar
  timeout: 15 min

security_java:
  stage: security
  needs: ["maven_build"]
  allow_failure: true
  variables:
    SEC_DEPENDENCY_SCAN_ENABLE: "true"
  trigger:
    include:
      - project: oak/security/security-pipeline
        ref: master
        file: pipeline.yml
  except:
    refs:
      - tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /maven-release-plugin/